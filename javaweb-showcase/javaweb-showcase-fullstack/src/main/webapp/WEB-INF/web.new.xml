<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name>javaweb-showcase-web</display-name>
  
  <!-- Context Parameters Configuration -->
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>javaweb-showcase-root</param-value>
  </context-param>
  <context-param>
    <param-name>spring.profiles.default</param-name>
    <param-value>production</param-value>
  </context-param>
  <context-param>
    <param-name>spring.profiles.active</param-name>
    <param-value>development</param-value>
  </context-param>
  
  <!-- Spring 配置文件加载 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:conf/applicationContext.xml</param-value>
  </context-param>
  <!-- logback 配置文件加载 -->
  <context-param>
    <param-name>logbackConfigLocation</param-name>
    <param-value>classpath:conf/logback.xml</param-value>
  </context-param>
  
  <listener>
    <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
  </listener>
  
  <!-- 
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:conf/log4j.xml</param-value>
    // <param-value>classpath:prop/log4j.properties</param-value> 
  </context-param>
  <context-param>
    <param-name>log4jRefreshInterval</param-name>
    // Log4J's watchdog thread, 10 seconds between config file refresh checks 
    <param-value>1000</param-value>
  </context-param>
   -->
  <!-- Log4J Listener -->
  <!-- 
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
   -->
  <!--
    注意：org.springframework.web.util.Log4jConfigListener 的配置必须在 org.springframework.web.context.ContextLoaderListener 的配置之前， 否则日志配置
    log4jConfigLocation classpath:config/log4j.xml 在Spring启动时无法找到。
  -->
  
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- Spring MVC, Processes application requests -->
  <servlet>
    <servlet-name>springMVCServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <!-- 
    <async-supported>true</async-supported>
     -->    
  </servlet>    
  <servlet-mapping>
    <servlet-name>springMVCServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>  

  <!-- Filter Configuration -->
  <filter>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <servlet-name>springMVCServlet</servlet-name>
  </filter-mapping>
  
  <!-- Spring2.0 扩展字符编码过滤器配置  -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter>
    <filter-name>lazyLoadingFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    <init-param>
      <param-name>sessionFactoryBeanName</param-name>
      <param-value>sessionFactory1</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>lazyLoadingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>lazyLoadingFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  
  <filter>
    <filter-name>sitemeshFilter</filter-name>
    <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>sitemeshFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 页面超时时间：60 分钟 -->
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>

  <!-- 
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
   --> 	
</web-app>
